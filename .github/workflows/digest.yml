name: Biotech Daily Digest

permissions:
  contents: write

on:
  schedule:
    - cron: "30 14 * * *"   # 07:30 America/Los_Angeles
  workflow_dispatch:

jobs:
  run-digest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Generate digest
        run: python scripts/biotech_digest.py

      - name: Update homepage to today
        run: |
          TODAY="$(date -u +'%Y-%m-%d')"
          cat > index.md <<EOF
          # Biotech Daily Digest

          - Latest: [${TODAY} Digest](digest/${TODAY}.md)
          - [Archive](archive.md)

          All digests live in \`digest/\`. Bookmark this page to get the newest link every morning.
          EOF

      - name: Build archive page
        run: |
          echo "# Archive" > archive.md
          echo "" >> archive.md
          ls -1 digest/*.md 2>/dev/null | sort -r | while read f; do
            base="$(basename "$f")"
            echo "- [${base%.md}](digest/${base})" >> archive.md
          done || true

      - name: Configure git author
        run: |
          git config user.name "Himay Makhija"
          git config user.email "68885248+mknoir@users.noreply.github.com"
          echo "GIT_COMMITTER_NAME=Himay Makhija" >> $GITHUB_ENV
          echo "GIT_COMMITTER_EMAIL=68885248+mknoir@users.noreply.github.com" >> $GITHUB_ENV

      - name: Daily stamp (forces a change each run)
        run: |
          echo "build: $(date -u +'%Y-%m-%dT%H:%M:%SZ')" > .daily-stamp

      - name: Create multiple commits
        run: |
          # Random number of commits between 1-20
          NUM_COMMITS=$((RANDOM % 20 + 1))
          echo "Creating $NUM_COMMITS commits today"
          
          # List of files to commit
          FILES=(
            "digest/*.md"
            "README.md" 
            "data/seen.json"
            "index.md"
            "archive.md"
            "_config.yml"
            ".daily-stamp"
          )
          
          # Shuffle and split files across commits
          ALL_FILES=()
          for pattern in "${FILES[@]}"; do
            for file in $pattern; do
              if [ -f "$file" ] || [ "$file" = "digest/*.md" ]; then
                ALL_FILES+=("$file")
              fi
            done
          done
          
          # Ensure we have changes to commit
          git add -A
          if git diff --cached --quiet; then
            echo "No changes to commit"
            exit 0
          fi
          
          # Create the commits
          for ((i=1; i<=NUM_COMMITS; i++)); do
            if [ $i -eq 1 ]; then
              # First commit: main digest update
              git add digest/*.md README.md data/seen.json
              if ! git diff --cached --quiet; then
                git commit -m "feat: daily biotech digest $(date -u +'%Y-%m-%d')"
              fi
            elif [ $i -eq 2 ]; then
              # Second commit: homepage update
              git add index.md archive.md
              if ! git diff --cached --quiet; then
                git commit -m "docs: update homepage and archive"
              fi
            else
              # Remaining commits: maintenance/housekeeping
              git add -f .daily-stamp _config.yml 2>/dev/null || true
              if ! git diff --cached --quiet; then
                MESSAGES=(
                  "chore: daily maintenance"
                  "build: update build timestamp"
                  "ci: automated workflow run"
                  "chore: system housekeeping" 
                  "build: refresh configuration"
                  "chore: automated cleanup"
                  "ci: scheduled maintenance"
                  "build: daily refresh"
                )
                MSG_INDEX=$((RANDOM % ${#MESSAGES[@]}))
                git commit -m "${MESSAGES[$MSG_INDEX]}" --allow-empty
              else
                # Create empty commit for activity
                git commit --allow-empty -m "chore: automated maintenance"
              fi
            fi
            
            # Random delay between commits (30 seconds to 10 minutes)
            if [ $i -lt $NUM_COMMITS ]; then
              DELAY=$((RANDOM % 570 + 30))
              echo "Waiting ${DELAY} seconds before next commit..."
              sleep $DELAY
            fi
          done

      - name: Push changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: git push origin HEAD:main

